generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  provider      Provider
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  streams       Stream[]
  upvotes       Upvotes[]
}

model Stream {
  id             String     @id @default(uuid())
  type           StreamType
  url            String
  extractedId    String
  title          String     @default("")
  smallImg       String     @default("")
  bigImg         String     @default("")
  active         Boolean    @default(true)
  anonymousVotes Int        @default(0)
  userId         String
  user           User       @relation(fields: [userId], references: [id])
  upvotes        Upvotes[]
}

model Upvotes {
  id       String @id @default(uuid())
  userId   String
  streamId String
  stream   Stream @relation(fields: [streamId], references: [id])
  user     User   @relation(fields: [userId], references: [id])

  @@unique([userId, streamId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum StreamType {
  Spotify
  Youtube
}

enum Provider {
  Google
  Anonymous
}
